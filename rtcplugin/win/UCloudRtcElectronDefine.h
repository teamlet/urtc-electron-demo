#ifndef _UCLOUD_RTC_ELEC_DEFINE_H_
#define _UCLOUD_RTC_ELEC_DEFINE_H_

#include <stdint.h>

#define _ATL_CSTRING_EXPLICIT_CONSTRUCTORS

typedef void(*ELECAVSDKCALLBACK)(int eventid, const char* data);
typedef void(*ELECAUDIOCALLBACK)(int eny);

typedef enum _tUCloudRtcElecEventid {
	UCLOUD_RTC_ELEC_EVENT_OK = 5000,
	UCLOUD_RTC_ELEC_EVENT_SERVER_DIS ,
	UCLOUD_RTC_ELEC_EVENT_JOINROOM,
	UCLOUD_RTC_ELEC_EVENT_LEAVEROOM,
	UCLOUD_RTC_ELEC_EVENT_RECONNECTING,
	UCLOUD_RTC_ELEC_EVENT_RECONNECT,
	UCLOUD_RTC_ELEC_EVENT_PUBLISH,
	UCLOUD_RTC_ELEC_EVENT_UNPUBLISH,
	UCLOUD_RTC_ELEC_EVENT_USER_JOIN,
	UCLOUD_RTC_ELEC_EVENT_USER_LEAVE,
	UCLOUD_RTC_ELEC_EVENT_REMOTE_PUBLISH,
	UCLOUD_RTC_ELEC_EVENT_REMOTE_UNPUBLISH,
	UCLOUD_RTC_ELEC_EVENT_SUB_RESULT,
	UCLOUD_RTC_ELEC_EVENT_UNSUB_RESULT,
	UCLOUD_RTC_ELEC_EVENT_LOCAL_MEDIA_MUTE,
	UCLOUD_RTC_ELEC_EVENT_REMOTE_MEDIA_MUTE,
	UCLOUD_RTC_ELEC_EVENT_STREAM_ST_NOTIFY,
	UCLOUD_RTC_ELEC_EVENT_LOCAL_AUDIO_LEVEL,
	UCLOUD_RTC_ELEC_EVENT_REMOTE_AUDIO_LEVEL,
	UCLOUD_RTC_ELEC_EVENT_STARTRECORD,
	UCLOUD_RTC_ELEC_EVENT_STOPRECORD,
	UCLOUD_RTC_ELEC_EVENT_DOCAPTURE
}UCloudRtcElecEventid;

typedef struct _tVideoFrame {
	uint8_t* m_videobuf ;
	int32_t m_buflen ;
}tVideoFrame;

#endif

